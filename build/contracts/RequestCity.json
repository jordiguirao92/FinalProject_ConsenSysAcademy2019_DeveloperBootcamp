{
  "contractName": "RequestCity",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AccidentalDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "applicant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "requestAddress",
          "type": "string"
        }
      ],
      "name": "NewRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "OwnerslistAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "OwnerslistAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum RequestCity.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "StateUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "WithdrawEvent",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowanceAddressToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowanceToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "applicantRequests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approveToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceAddressToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOfToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintedAmount",
          "type": "uint256"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerslist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dateOfIssue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "requestAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "enum RequestCity.Priority",
          "name": "priority",
          "type": "uint8"
        },
        {
          "internalType": "enum RequestCity.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFromToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_requestAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "enum RequestCity.Priority",
          "name": "_priority",
          "type": "uint8"
        }
      ],
      "name": "createRequest",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestID",
          "type": "uint256"
        }
      ],
      "name": "getRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dateOfIssue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_applicant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_requestAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "enum RequestCity.Priority",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "enum RequestCity.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUserRequests",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumberOfRequests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestID",
          "type": "uint256"
        }
      ],
      "name": "denyRequest",
      "outputs": [
        {
          "internalType": "enum RequestCity.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestID",
          "type": "uint256"
        }
      ],
      "name": "solveRequest",
      "outputs": [
        {
          "internalType": "enum RequestCity.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newprice",
          "type": "uint256"
        }
      ],
      "name": "setRequestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTokenReward",
          "type": "uint256"
        }
      ],
      "name": "setTokenReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AccidentalDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"applicant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"requestAddress\",\"type\":\"string\"}],\"name\":\"NewRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OwnerslistAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OwnerslistAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum RequestCity.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"StateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawEvent\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowanceAddressToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowanceToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"applicantRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceAddressToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_requestAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"enum RequestCity.Priority\",\"name\":\"_priority\",\"type\":\"uint8\"}],\"name\":\"createRequest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"}],\"name\":\"denyRequest\",\"outputs\":[{\"internalType\":\"enum RequestCity.State\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dateOfIssue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_applicant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_requestAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"enum RequestCity.Priority\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum RequestCity.State\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserRequests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerslist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dateOfIssue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"requestAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum RequestCity.Priority\",\"name\":\"priority\",\"type\":\"uint8\"},{\"internalType\":\"enum RequestCity.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newprice\",\"type\":\"uint256\"}],\"name\":\"setRequestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTokenReward\",\"type\":\"uint256\"}],\"name\":\"setTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"}],\"name\":\"solveRequest\",\"outputs\":[{\"internalType\":\"enum RequestCity.State\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFromToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jordi Guirao\",\"methods\":{\"addOwner(address)\":{\"author\":\"Jordi Guirao\",\"params\":{\"addr\":\"address\"},\"return\":\"true if the address was added to the ownerslist, false if the address was already in the ownerslist\"},\"allowanceAddressToken(address,address)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"approveToken(address,uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"},\"return\":\"bool\"},\"balanceAddressToken(address)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burnToken(uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_value\":\"the amount of money to burn\"},\"return\":\"bool\"},\"contractBalance()\":{\"author\":\"Jordi Guirao\",\"return\":\"contracts balance\"},\"createRequest(string,string,string,string,uint8)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_city\":\"Nambe of the city\",\"_description\":\"Description of the request\",\"_ipfsHash\":\"ipsfhash of the image\",\"_priority\":\"Priority that need the request to be solved\",\"_requestAddress\":\"Address where is the event found\"}},\"denyRequest(uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_requestID\":\"id of the request\"},\"return\":\"new request state\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"getNumberOfRequests()\":{\"author\":\"Jordi Guirao\",\"return\":\"number of requests\"},\"getRequest(uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_requestID\":\"ID of the request\"},\"return\":\"request details\"},\"getUserRequests()\":{\"author\":\"Jordi Guirao\",\"return\":\"an array with the id of the requests that msg.sender has done.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintToken(address,uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"mintedAmount\":\"the amount of tokens it will receive\",\"target\":\"Address to receive the tokens\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"removeOwner(address)\":{\"author\":\"Jordi Guirao\",\"params\":{\"addr\":\"address\"},\"return\":\"true if the address was removed from the ownerslist, false if the address wasn't in the ownerslist in the first place\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setRequestPrice(uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_newprice\":\"new request price in wei\"},\"return\":\"Updated price of the request\"},\"setTokenReward(uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_newTokenReward\":\"new request price in wei\"},\"return\":\"Updated price of the request\"},\"solveRequest(uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_requestID\":\"id of the request\"},\"return\":\"new request state\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferFromToken(address,address,uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"},\"return\":\"bool\"},\"transferToken(address,uint256)\":{\"author\":\"Jordi Guirao\",\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"},\"return\":\"bool\"},\"withdrawBalance()\":{\"author\":\"Jordi Guirao\"}},\"title\":\"A dapp for create request\"},\"userdoc\":{\"methods\":{\"addOwner(address)\":{\"notice\":\"add an address to the ownerslist\"},\"allowanceAddressToken(address,address)\":{\"notice\":\"Function to check the amount of tokens that an owner allowed to a spender.\"},\"approveToken(address,uint256)\":{\"notice\":\"Set allowanceToken for other address: Allows `_spender` to spend no more than `_value` tokens in your behalf\"},\"balanceAddressToken(address)\":{\"notice\":\"Gets the balance of the specified address.\"},\"burnToken(uint256)\":{\"notice\":\"Destroy tokens: Remove `_value` tokens from the system irreversibly\"},\"contractBalance()\":{\"notice\":\"obtain the balance of the contract address\"},\"createRequest(string,string,string,string,uint8)\":{\"notice\":\"create a new Request\"},\"denyRequest(uint256)\":{\"notice\":\"change the request state to solve denied. Only onlyOwners can do it\"},\"getNumberOfRequests()\":{\"notice\":\"get the number of requests made by msg.sender\"},\"getRequest(uint256)\":{\"notice\":\"get request information\"},\"getUserRequests()\":{\"notice\":\"get all the request that a user has made.\"},\"mintToken(address,uint256)\":{\"notice\":\"Create `mintedAmount` tokens and send it to `target`\"},\"removeOwner(address)\":{\"notice\":\"remove an address from the ownerslist\"},\"setRequestPrice(uint256)\":{\"notice\":\"change the requestPrice\"},\"setTokenReward(uint256)\":{\"notice\":\"change the tokenReward\"},\"solveRequest(uint256)\":{\"notice\":\"change the request state to solved. Only onlyOwners can do it\"},\"transferFromToken(address,address,uint256)\":{\"notice\":\"Transfer tokens from other addressSend `_value` tokens to `_to` in behalf of `_from`\"},\"transferToken(address,uint256)\":{\"notice\":\"Transfer tokens: Send `_value` tokens to `_to` from your account\"},\"withdrawBalance()\":{\"notice\":\"owner can withdraw the contract balance\"}},\"notice\":\"Dapp to create requests to a city council, for example. If the requests are solved, the user will earn token\"}},\"settings\":{\"compilationTarget\":{\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/RequestCity.sol\":\"RequestCity\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/ERC20CYT.sol\":{\"keccak256\":\"0x1bc32873881b07006f4d354902acf008dc110c23987a93aa5b9e7765d336496a\",\"urls\":[\"bzz-raw://031607a33de9106a214561dc5fc34052f91d1ba5f4d9c50220982db88366704e\",\"dweb:/ipfs/QmU8r2darcBuDe67SxGe5DFz1Em7NE2ecdgyFPh4Uy35Wp\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/Ownable.sol\":{\"keccak256\":\"0x71408433998a351376d9a95ced67e576e34a2d70b43d8be63f12713aaa0d9b71\",\"urls\":[\"bzz-raw://22ed5f540b0127d11dd1bb24e7fbd394f1f452d3ffa7fd20e7d0e625dcd50919\",\"dweb:/ipfs/QmRj2YN4T45dBYDTsVtVLPRMonv7C48B9d9NoL4a6HJu8C\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/RequestCity.sol\":{\"keccak256\":\"0x6eb128f948beb1a12e13fc13a782b69785ced9f6b754e9651b0de5d240627357\",\"urls\":[\"bzz-raw://17622563610efeb62393571f16aa80b481f6a4eb141cb0f6563e3305518f3c18\",\"dweb:/ipfs/QmX1NW3VhPoPbu6pWmLzyKd9uEDqxwpGopqXwwLJHs2Rc8\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x250605d58768f7b91ca896baa3001f0109d1c2dd071e97edfd6d9c0ca354a49a\",\"urls\":[\"bzz-raw://d0d716ef508742bcf3887e95a2011d3fcecb87635ba18b823c884162073d0aee\",\"dweb:/ipfs/QmcuEV6mQR15VdUrBEtLT56NcPQeM654SF8WaGNKtsj6Lz\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102305760003560e01c80637065cb481161012e57806395d89b41116100ab578063b88d4fde1161006f578063b88d4fde146113c7578063b99152d0146114d9578063c1110cf91461153e578063c58343ef1461159b578063e985e9c5146117fe57610230565b806395d89b41146111975780639738849714611227578063a22cb46514611252578063ad6822ae146112af578063b4765db71461133457610230565b806381d12c58116100f257806381d12c5814610b8e57806389e67ad414610df157806389eaf2d71461107e5780638b7afe2e14611103578063916782cf1461112e57610230565b80637065cb48146109b557806370a0823114610a1e57806379c6506814610a8357806379f96c5714610ade5780637b47ec1a14610b3b57610230565b806323b872dd116101bc57806355fe42561161018057806355fe42561461081d5780635ad7c05c1461088c5780635fd8c710146108f85780636352211e1461090f5780636e66f6e91461098a57610230565b806323b872dd146106245780633fcf7ca11461069f57806342842e0e146106ee57806349f06141146107695780634fe01d38146107ce57610230565b8063095ea7b311610203578063095ea7b3146104975780631072cbea146104f25780631604f9ea14610565578063173825d91461059057806318160ddd146105f957610230565b806301ffc9a7146102a7578063022fc88b1461031957806306fdde031461038c578063081812fc1461041c575b60003411156102a5577fd74ca19e3ad79f107cd3fb64be535aace3422e872c572909645452a6a91580623334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b005b3480156102b357600080fd5b506102ff600480360360208110156102ca57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611887565b604051808215151515815260200191505060405180910390f35b34801561032557600080fd5b506103726004803603604081101561033c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ee565b604051808215151515815260200191505060405180910390f35b34801561039857600080fd5b506103a16119e0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e15780820151818401526020810190506103c6565b50505050905090810190601f16801561040e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561042857600080fd5b506104556004803603602081101561043f57600080fd5b8101908080359060200190929190505050611a7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a357600080fd5b506104f0600480360360408110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b19565b005b3480156104fe57600080fd5b5061054b6004803603604081101561051557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d00565b604051808215151515815260200191505060405180910390f35b34801561057157600080fd5b5061057a611d17565b6040518082815260200191505060405180910390f35b34801561059c57600080fd5b506105df600480360360208110156105b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d1d565b604051808215151515815260200191505060405180910390f35b34801561060557600080fd5b5061060e611ef5565b6040518082815260200191505060405180910390f35b34801561063057600080fd5b5061069d6004803603606081101561064757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611efb565b005b3480156106ab57600080fd5b506106d8600480360360208110156106c257600080fd5b8101908080359060200190929190505050611f71565b6040518082815260200191505060405180910390f35b3480156106fa57600080fd5b506107676004803603606081101561071157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061204d565b005b34801561077557600080fd5b506107b86004803603602081101561078c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206d565b6040518082815260200191505060405180910390f35b3480156107da57600080fd5b50610807600480360360208110156107f157600080fd5b81019080803590602001909291905050506120b6565b6040518082815260200191505060405180910390f35b34801561082957600080fd5b506108766004803603604081101561084057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612188565b6040518082815260200191505060405180910390f35b34801561089857600080fd5b506108a16121b6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108e45780820151818401526020810190506108c9565b505050509050019250505060405180910390f35b34801561090457600080fd5b5061090d6122ac565b005b34801561091b57600080fd5b506109486004803603602081101561093257600080fd5b8101908080359060200190929190505050612453565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561099657600080fd5b5061099f61251b565b6040518082815260200191505060405180910390f35b3480156109c157600080fd5b50610a04600480360360208110156109d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612521565b604051808215151515815260200191505060405180910390f35b348015610a2a57600080fd5b50610a6d60048036036020811015610a4157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126f8565b6040518082815260200191505060405180910390f35b348015610a8f57600080fd5b50610adc60048036036040811015610aa657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506127cd565b005b348015610aea57600080fd5b50610b1760048036036020811015610b0157600080fd5b8101908080359060200190929190505050612952565b60405180826002811115610b2757fe5b60ff16815260200191505060405180910390f35b348015610b4757600080fd5b50610b7460048036036020811015610b5e57600080fd5b8101908080359060200190929190505050612b5a565b604051808215151515815260200191505060405180910390f35b348015610b9a57600080fd5b50610bc760048036036020811015610bb157600080fd5b8101908080359060200190929190505050612d67565b604051808a8152602001898152602001806020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001876002811115610c2557fe5b60ff168152602001866002811115610c3957fe5b60ff16815260200185810385528c818151815260200191508051906020019080838360005b83811015610c79578082015181840152602081019050610c5e565b50505050905090810190601f168015610ca65780820380516001836020036101000a031916815260200191505b5085810384528a818151815260200191508051906020019080838360005b83811015610cdf578082015181840152602081019050610cc4565b50505050905090810190601f168015610d0c5780820380516001836020036101000a031916815260200191505b50858103835289818151815260200191508051906020019080838360005b83811015610d45578082015181840152602081019050610d2a565b50505050905090810190601f168015610d725780820380516001836020036101000a031916815260200191505b50858103825288818151815260200191508051906020019080838360005b83811015610dab578082015181840152602081019050610d90565b50505050905090810190601f168015610dd85780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b61107c600480360360a0811015610e0757600080fd5b8101908080359060200190640100000000811115610e2457600080fd5b820183602082011115610e3657600080fd5b80359060200191846001830284011164010000000083111715610e5857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ebb57600080fd5b820183602082011115610ecd57600080fd5b80359060200191846001830284011164010000000083111715610eef57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f5257600080fd5b820183602082011115610f6457600080fd5b80359060200191846001830284011164010000000083111715610f8657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610fe957600080fd5b820183602082011115610ffb57600080fd5b8035906020019184600183028401116401000000008311171561101d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919050505061304f565b005b34801561108a57600080fd5b506110ed600480360360408110156110a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134a6565b6040518082815260200191505060405180910390f35b34801561110f57600080fd5b5061111861352d565b6040518082815260200191505060405180910390f35b34801561113a57600080fd5b5061117d6004803603602081101561115157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061360b565b604051808215151515815260200191505060405180910390f35b3480156111a357600080fd5b506111ac61362b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111ec5780820151818401526020810190506111d1565b50505050905090810190601f1680156112195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561123357600080fd5b5061123c6136c9565b6040518082815260200191505060405180910390f35b34801561125e57600080fd5b506112ad6004803603604081101561127557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506136d9565b005b3480156112bb57600080fd5b5061131e600480360360408110156112d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613891565b6040518082815260200191505060405180910390f35b34801561134057600080fd5b506113ad6004803603606081101561135757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506138b6565b604051808215151515815260200191505060405180910390f35b3480156113d357600080fd5b506114d7600480360360808110156113ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561145157600080fd5b82018360208201111561146357600080fd5b8035906020019184600183028401116401000000008311171561148557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613a4a565b005b3480156114e557600080fd5b50611528600480360360208110156114fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ac2565b6040518082815260200191505060405180910390f35b34801561154a57600080fd5b506115776004803603602081101561156157600080fd5b8101908080359060200190929190505050613ada565b6040518082600281111561158757fe5b60ff16815260200191505060405180910390f35b3480156115a757600080fd5b506115d4600480360360208110156115be57600080fd5b8101908080359060200190929190505050613d12565b604051808a8152602001898152602001806020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018060200187600281111561163257fe5b60ff16815260200186600281111561164657fe5b60ff16815260200185810385528c818151815260200191508051906020019080838360005b8381101561168657808201518184015260208101905061166b565b50505050905090810190601f1680156116b35780820380516001836020036101000a031916815260200191505b5085810384528a818151815260200191508051906020019080838360005b838110156116ec5780820151818401526020810190506116d1565b50505050905090810190601f1680156117195780820380516001836020036101000a031916815260200191505b50858103835289818151815260200191508051906020019080838360005b83811015611752578082015181840152602081019050611737565b50505050905090810190601f16801561177f5780820380516001836020036101000a031916815260200191505b50858103825288818151815260200191508051906020019080838360005b838110156117b857808201518184015260208101905061179d565b50505050905090810190601f1680156117e55780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b34801561180a57600080fd5b5061186d6004803603604081101561182157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506140a9565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a765780601f10611a4b57610100808354040283529160200191611a76565b820191906000526020600020905b815481529060010190602001808311611a5957829003601f168201915b505050505081565b6000611a898261413d565b611ade576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806151ca602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b2482612453565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611bab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061521f6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611bca6141af565b73ffffffffffffffffffffffffffffffffffffffff161480611bf95750611bf881611bf36141af565b6140a9565b5b611c4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061511c6038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000611d0d3384846141b7565b6001905092915050565b600b5481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611dde576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611ef0576000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f573f8b697fb02eea64e5bb95dc7d0d06498fbc3d35ec94b4239327afee00777182604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600190505b919050565b60085481565b611f0c611f066141af565b82614509565b611f61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806152406031913960400191505060405180910390fd5b611f6c8383836145fd565b505050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b670de0b6b3a76400008202600b81905550600b549050919050565b61206883838360405180602001604052806000815250613a4a565b505050565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612177576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b81600d81905550600d549050919050565b600f60205281600052604060002081815481106121a157fe5b90600052602060002001600091509150505481565b606060006121c3336126f8565b11612219576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806151a76023913960400191505060405180910390fd5b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156122a257602002820191906000526020600020905b81548152602001906001019080831161228e575b5050505050905090565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661236b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156123cd573d6000803e3d6000fd5b507f5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc813073ffffffffffffffffffffffffffffffffffffffff1631604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061517e6029913960400191505060405180910390fd5b80915050919050565b600d5481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166125e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166126f3576001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f83816cf3e38e624df946c11b7c2432c2f9e3d504aef4bea7a67a4a95a7e9770182604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600190505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561277f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615154602a913960400191505060405180910390fd5b6127c6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614858565b9050919050565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661288c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806008600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612a13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b60006002811115612a2057fe5b600e600084815260200190815260200160002060070160019054906101000a900460ff166002811115612a4f57fe5b14612aa5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806152716023913960400191505060405180910390fd5b6000600e6000848152602001908152602001600020905060028160070160016101000a81548160ff02191690836002811115612add57fe5b02179055507faeb9cdb2262d9c6da78aab88f1554ca2a08120de39807de5747118702bfc9631838260070160019054906101000a900460ff1660405180838152602001826002811115612b2c57fe5b60ff1681526020019250505060405180910390a18060070160019054906101000a900460ff16915050919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612c1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612cb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061504a6022913960400191505060405180910390fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816008600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050919050565b600e602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e1f5780601f10612df457610100808354040283529160200191612e1f565b820191906000526020600020905b815481529060010190602001808311612e0257829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ee35780601f10612eb857610100808354040283529160200191612ee3565b820191906000526020600020905b815481529060010190602001808311612ec657829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f815780601f10612f5657610100808354040283529160200191612f81565b820191906000526020600020905b815481529060010190602001808311612f6457829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561301f5780601f10612ff45761010080835404028352916020019161301f565b820191906000526020600020905b81548152906001019060200180831161300257829003601f168201915b5050505050908060070160009054906101000a900460ff16908060070160019054906101000a900460ff16905089565b600b543410156130aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806150ee602e913960400191505060405180910390fd5b60006130b6600c614858565b90506130c23382614866565b6130ca614f2c565b6040518061012001604052808381526020014281526020018881526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184600281111561312257fe5b81526020016000600281111561313457fe5b815250905080600e60008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908051906020019061317d929190614fa4565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040190805190602001906131e1929190614fa4565b5060a08201518160050190805190602001906131fe929190614fa4565b5060c082015181600601908051906020019061321b929190614fa4565b5060e08201518160070160006101000a81548160ff0219169083600281111561324057fe5b02179055506101008201518160070160016101000a81548160ff0219169083600281111561326a57fe5b02179055509050506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050808390806001815401808255809150509060018203906000526020600020016000909192909190915055506132ea600c614a7e565b7fd6c92eeb860bf9ce43d6b112fee6f9d8048c39ae1ea79b55ff464900861d1e5483338a8a8a604051808681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015613390578082015181840152602081019050613375565b50505050905090810190601f1680156133bd5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156133f65780820151818401526020810190506133db565b50505050905090810190601f1680156134235780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101561345c578082015181840152602081019050613441565b50505050905090810190601f1680156134895780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166135ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1631905090565b60056020528060005260406000206000915054906101000a900460ff1681565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156136c15780601f10613696576101008083540402835291602001916136c1565b820191906000526020600020905b8154815290600101906020018083116136a457829003601f168201915b505050505081565b60006136d4336126f8565b905090565b6136e16141af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613782576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806004600061378f6141af565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661383c6141af565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600a602052816000526040600020602052806000526040600020600091509150505481565b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156139aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f7520617265206e6f7420616c6c6f7765640000000000000000000000000081525060200191505060405180910390fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550613a3f8484846141b7565b600190509392505050565b613a5b613a556141af565b83614509565b613ab0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806152406031913960400191505060405180910390fd5b613abc84848484614a94565b50505050565b60096020528060005260406000206000915090505481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16613b9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f596f7520617265206e6f7420616e206f776e657200000000000000000000000081525060200191505060405180910390fd5b60006002811115613ba857fe5b600e600084815260200190815260200160002060070160019054906101000a900460ff166002811115613bd757fe5b14613c2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806152716023913960400191505060405180910390fd5b6000600e6000848152602001908152602001600020905060018160070160016101000a81548160ff02191690836002811115613c6557fe5b0217905550613c9a8160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d546127cd565b7faeb9cdb2262d9c6da78aab88f1554ca2a08120de39807de5747118702bfc9631838260070160019054906101000a900460ff1660405180838152602001826002811115613ce457fe5b60ff1681526020019250505060405180910390a18060070160019054906101000a900460ff16915050919050565b600080606060006060806060600080613d2a8a61413d565b613d9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f54686973207265717565737420494420646f65206e6f7420657869737473000081525060200191505060405180910390fd5b6000600e60008c8152602001908152602001600020905080600001548160010154826002018360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460040185600501866006018760070160009054906101000a900460ff168860070160019054906101000a900460ff16868054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613eab5780601f10613e8057610100808354040283529160200191613eab565b820191906000526020600020905b815481529060010190602001808311613e8e57829003601f168201915b50505050509650859550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613f4a5780601f10613f1f57610100808354040283529160200191613f4a565b820191906000526020600020905b815481529060010190602001808311613f2d57829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613fe65780601f10613fbb57610100808354040283529160200191613fe6565b820191906000526020600020905b815481529060010190602001808311613fc957829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156140825780601f1061405757610100808354040283529160200191614082565b820191906000526020600020905b81548152906001019060200180831161406557829003601f168201915b50505050509250995099509950995099509950995099509950509193959799909294969850565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561425a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f50726576656e74207472616e7366657220746f2030783020616464726573730081525060200191505060405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561430f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f73656e64657220686173206e6f7420656e6f7567682062616c616e636500000081525060200191505060405180910390fd5b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015614405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f436865636b20666f72206f766572666c6f77730000000000000000000000000081525060200191505060405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60006145148261413d565b614569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806150c2602c913960400191505060405180910390fd5b600061457483612453565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806145e357508373ffffffffffffffffffffffffffffffffffffffff166145cb84611a7e565b73ffffffffffffffffffffffffffffffffffffffff16145b806145f457506145f381856140a9565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661461d82612453565b73ffffffffffffffffffffffffffffffffffffffff1614614689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806151f66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561470f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061509e6024913960400191505060405180910390fd5b61471881614b06565b61475f600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614bc4565b6147a6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614a7e565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415614909576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6149128161413d565b15614985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614a1e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614a7e565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b614a9f8484846145fd565b614aab84848484614be7565b614b00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061506c6032913960400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614bc15760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b614bdc60018260000154614dd790919063ffffffff16565b816000018190555050565b6000614c088473ffffffffffffffffffffffffffffffffffffffff16614e21565b614c155760019050614dcf565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02614c3b6141af565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614cf7578082015181840152602081019050614cdc565b50505050905090810190601f168015614d245780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015614d4657600080fd5b505af1158015614d5a573d6000803e3d6000fd5b505050506040513d6020811015614d7057600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000614e1983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614e6c565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015614e635750808214155b92505050919050565b6000838311158290614f19576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614ede578082015181840152602081019050614ec3565b50505050905090810190601f168015614f0b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806101200160405280600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160006002811115614f8c57fe5b815260200160006002811115614f9e57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614fe557805160ff1916838001178555615013565b82800160010185558215615013579182015b82811115615012578251825591602001919060010190614ff7565b5b5090506150209190615024565b5090565b61504691905b8082111561504257600081600090555060010161502a565b5090565b9056fe596f7520646f206e6f7420686176652073756666696369656e742062616c616e63654552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e596f75206e65656420746f20706179206d6f726520657468657220746f20637265617465206120726571756573744552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e6d73672e73656e64657220686173206e6f74206d61646520616e7920726571756573744552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665645468652072657175657374207374617465206973206e6f742772657175657374656427a265627a7a723158200116d0ef4d3927b7b25d3d4a2d6202ffd9629581cdcc51f8bc7580335aefbcb664736f6c634300050c0032",
  "sourceMap": "394:5910:3:-;;;351:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;389:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;522:10:3;495:37;;612:2;586:28;;435:1;718:40:6;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::9;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;329:4:2;304:10;:22;315:10;304:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;875:13:0;861:11;:27;;;;927:11;;898:14;:26;913:10;898:26;;;;;;;;;;;;;;;:40;;;;807:138;394:5910:3;;1442:190:6;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;394:5910:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "394:5910:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6226:1;6214:9;:13;6210:86;;;6248:40;6266:10;6278:9;6248:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;6210:86;394:5910;915:133:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3615:214:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3615:214:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3615:214:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;351:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:32:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;351:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:200:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4283:200:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4283:200:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3583:415;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3583:415:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3583:415:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2056:146:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2056:146:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2056:146:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;495:37:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;495:37:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1253:237:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1253:237:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1253:237:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;423:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;423:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5929:287:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5929:287:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5929:287:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5060:154:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5060:154:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5060:154:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6865:132:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6865:132:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6865:132:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1190:125:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1190:125:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1190:125:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5389:153:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5389:153:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5389:153:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1022:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:51:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1022:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3292:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3292:200:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3292:200:3;;;;;;;;;;;;;;;;;5875:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5875:202:3;;;:::i;:::-;;2939:223:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2939:223:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2939:223:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;586:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:28:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;774:232:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;774:232:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;774:232:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2513:207:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2513:207:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2513:207:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4552:226:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4552:226:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4552:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3925:358:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3925:358:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3925:358:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:304:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4023:304:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4023:304:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;973:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;973:43:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;973:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;973:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;973:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;973:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:713;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1700:713:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1700:713:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1700:713:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1700:713:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1700:713:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1700:713:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1700:713:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1700:713:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1700:713:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1700:713:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1700:713:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1700:713:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1700:713:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1700:713:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1700:713:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1700:713:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1700:713:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1673:147:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1673:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1673:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5674:110:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5674:110:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;222:42:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;222:42:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;222:42:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;389:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;389:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3624:104:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3624:104:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4776:249:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4776:249:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4776:249:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;512:71:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:71:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3023:298;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3023:298:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3023:298:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7720:269:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7720:269:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7720:269:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7720:269:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7720:269:9;;;;;;;;;;;;;;;:::i;:::-;;456:50:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:50:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;456:50:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4475:410:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4475:410:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4475:410:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2564:552;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2564:552:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2564:552:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2564:552:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2564:552:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2564:552:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2564:552:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5347:145:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5347:145:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5347:145:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;915:133:6;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;3615:214:0:-;3687:4;3742:6;3703:14;:26;3718:10;3703:26;;;;;;;;;;;;;;;:36;3730:8;3703:36;;;;;;;;;;;;;;;:45;;;;3784:8;3763:38;;3772:10;3763:38;;;3794:6;3763:38;;;;;;;;;;;;;;;;;;3818:4;3811:11;;3615:214;;;;:::o;351:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4283:200:9:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4452:15;:24;4468:7;4452:24;;;;;;;;;;;;;;;;;;;;;4445:31;;4283:200;;;:::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;3696:11;;:2;:11;;;;3688:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;3764:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3764:62;3756:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3983:7;3979:2;3963:28;;3972:5;3963:28;;;;;;;;;;;;3583:415;;;:::o;2056:146:0:-;2124:4;2140:34;2150:10;2162:3;2167:6;2140:9;:34::i;:::-;2191:4;2184:11;;2056:146;;;;:::o;495:37:3:-;;;;:::o;1253:237:2:-;1313:12;485:10;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:10;:16;1351:4;1340:16;;;;;;;;;;;;;;;;;;;;;;;;;1336:148;;;1391:5;1372:10;:16;1383:4;1372:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1415:30;1440:4;1415:30;;;;;;;;;;;;;;;;;;;;;;1469:4;1459:14;;1336:148;1253:237;;;:::o;423:26:0:-;;;;:::o;5929:287:9:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;5060:154:3:-;5128:4;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:7:3;5159:9;:19;5144:12;:34;;;;5195:12;;5188:19;;5060:154;;;:::o;6865:132:9:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;1190:125:0:-;1256:15;1286:14;:22;1301:6;1286:22;;;;;;;;;;;;;;;;1279:29;;1190:125;;;:::o;5389:153:3:-;5462:4;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5492:15:3;5478:11;:29;;;;5524:11;;5517:18;;5389:153;;;:::o;1022:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3292:200::-;3342:13;3398:1;3374:21;3384:10;3374:9;:21::i;:::-;:25;3366:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3456:17;:29;3474:10;3456:29;;;;;;;;;;;;;;;3449:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3292:200;:::o;5875:202::-;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5931:21:3;5955:10;5931:34;;5975:5;:14;;:37;5998:4;5990:21;;;5975:37;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5975:37:3;6027:43;6041:5;6056:4;6048:21;;;6027:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;542:1:2;5875:202:3:o;2939:223:9:-;2994:7;3013:13;3029:11;:20;3041:7;3029:20;;;;;;;;;;;;;;;;;;;;;3013:36;;3084:1;3067:19;;:5;:19;;;;3059:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;3143:12;;;2939:223;;;:::o;586:28:3:-;;;;:::o;774:232:2:-;831:12;485:10;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:10;:16;870:4;859:16;;;;;;;;;;;;;;;;;;;;;;;;;854:146;;910:4;891:10;:16;902:4;891:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;933:28;956:4;933:28;;;;;;;;;;;;;;;;;;;;;;985:4;975:14;;854:146;774:232;;;:::o;2513:207:9:-;2568:7;2612:1;2595:19;;:5;:19;;;;2587:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2679:34;:17;:24;2697:5;2679:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2672:41;;2513:207;;;:::o;4552:226:0:-;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4662:12:0;4636:14;:22;4651:6;4636:22;;;;;;;;;;;;;;;;:38;;;;;;;;;;;4699:12;4684:11;;:27;;;;;;;;;;;4750:6;4726:45;;4743:4;4726:45;;;4758:12;4726:45;;;;;;;;;;;;;;;;;;4552:226;;:::o;3925:358:3:-;3989:5;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:15:3;4014:45;;;;;;;;:8;:20;4023:10;4014:20;;;;;;;;;;;:26;;;;;;;;;;;;:45;;;;;;;;;4006:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4109:23;4135:8;:20;4144:10;4135:20;;;;;;;;;;;4109:46;;4181:12;4165:7;:13;;;:28;;;;;;;;;;;;;;;;;;;;;;;;4208:38;4220:10;4232:7;:13;;;;;;;;;;;;4208:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:7;:13;;;;;;;;;;;;4256:20;;;3925:358;;;:::o;4023:304:0:-;4084:4;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:6:0;4108:14;:26;4123:10;4108:26;;;;;;;;;;;;;;;;:36;;4100:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4223:6;4193:14;:26;4208:10;4193:26;;;;;;;;;;;;;;;;:36;;;;;;;;;;;4254:6;4239:11;;:21;;;;;;;;;;;4280:10;4275:24;;;4292:6;4275:24;;;;;;;;;;;;;;;;;;4316:4;4309:11;;4023:304;;;:::oo;1700:713::-;1898:12;;1885:9;:25;;1877:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:7;1981:17;:7;:15;:17::i;:::-;1971:27;;2008:21;2014:10;2026:2;2008:5;:21::i;:::-;2039:22;;:::i;:::-;2064:105;;;;;;;;2072:2;2064:105;;;;2076:3;2064:105;;;;2081:9;2064:105;;;;2092:10;2064:105;;;;;;2104:5;2064:105;;;;2111:15;2064:105;;;;2128:12;2064:105;;;;2142:9;2064:105;;;;;;;;;;;;2153:15;2064:105;;;;;;;;;;;2039:130;;2194:7;2179:8;:12;2188:2;2179:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:27;2241:17;:29;2259:10;2241:29;;;;;;;;;;;;;;;2211:59;;2280:12;2298:2;2280:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2280:21:3;;;;;;;;;;;;;;;;;;;;;;2311:19;:7;:17;:19::i;:::-;2345:61;2356:2;2360:10;2372:9;2383:5;2390:15;2345:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2345:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2345:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2345:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:713;;;;;;;;:::o;1673:147:0:-;1759:7;1781:14;:22;1796:6;1781:22;;;;;;;;;;;;;;;:32;1804:8;1781:32;;;;;;;;;;;;;;;;1774:39;;1673:147;;;;:::o;5674:110:3:-;5733:4;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5764:4:3;5756:21;;;5749:28;;5674:110;:::o;222:42:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;389:28:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3624:104:3:-;3678:4;3700:21;3710:10;3700:9;:21::i;:::-;3693:28;;3624:104;:::o;4776:249:9:-;4861:12;:10;:12::i;:::-;4855:18;;:2;:18;;;;4847:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;4914:32;;;;;;;;;;;;;;;:36;4947:2;4914:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5005:2;4976:42;;4991:12;:10;:12::i;:::-;4976:42;;;5009:8;4976:42;;;;;;;;;;;;;;;;;;;;;;4776:249;;:::o;512:71:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3023:298::-;3110:4;3144:14;:21;3159:5;3144:21;;;;;;;;;;;;;;;:33;3166:10;3144:33;;;;;;;;;;;;;;;;3134:6;:43;;3126:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:6;3211:14;:21;3226:5;3211:21;;;;;;;;;;;;;;;:33;3233:10;3211:33;;;;;;;;;;;;;;;;:43;;;;;;;;;;;3264:29;3274:5;3281:3;3286:6;3264:9;:29::i;:::-;3310:4;3303:11;;3023:298;;;;;:::o;7720:269:9:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;456:50:0:-;;;;;;;;;;;;;;;;;:::o;4475:410:3:-;4540:5;485:10:2;:22;496:10;485:22;;;;;;;;;;;;;;;;;;;;;;;;;477:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4595:15:3;4565:45;;;;;;;;:8;:20;4574:10;4565:20;;;;;;;;;;;:26;;;;;;;;;;;;:45;;;;;;;;;4557:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4660:23;4686:8;:20;4695:10;4686:20;;;;;;;;;;;4660:46;;4732:12;4716:7;:13;;;:28;;;;;;;;;;;;;;;;;;;;;;;;4754:41;4764:7;:17;;;;;;;;;;;;4783:11;;4754:9;:41::i;:::-;4810:38;4822:10;4834:7;:13;;;;;;;;;;;;4810:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4865:7;:13;;;;;;;;;;;;4858:20;;;4475:410;;;:::o;2564:552::-;2626:8;2636:17;2655:23;2680:18;2700:19;2721:29;2752:26;2785:8;2795:5;2820:19;2828:10;2820:7;:19::i;:::-;2812:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2884:23;2910:8;:20;2919:10;2910:20;;;;;;;;;;;2884:46;;2948:7;:10;;;2960:7;:19;;;2981:7;:16;;2999:7;:17;;;;;;;;;;;;3018:7;:12;;3032:7;:22;;3056:7;:19;;3077:7;:16;;;;;;;;;;;;3095:7;:13;;;;;;;;;;;;2940:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2564:552;;;;;;;;;;;:::o;5347:145:9:-;5427:4;5450:18;:25;5469:5;5450:25;;;;;;;;;;;;;;;:35;5476:8;5450:35;;;;;;;;;;;;;;;;;;;;;;;;;5443:42;;5347:145;;;;:::o;9158:152::-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;788:96:4:-;833:15;867:10;860:17;;788:96;:::o;2273:451:0:-;2376:3;2361:19;;:3;:19;;;;2352:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:6;2435:14;:21;2450:5;2435:21;;;;;;;;;;;;;;;;:31;;2426:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:14;:19;2566:3;2551:19;;;;;;;;;;;;;;;;2541:6;2519:14;:19;2534:3;2519:19;;;;;;;;;;;;;;;;:28;:51;;2510:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2629:6;2604:14;:21;2619:5;2604:21;;;;;;;;;;;;;;;;:31;;;;;;;;;;;2668:6;2645:14;:19;2660:3;2645:19;;;;;;;;;;;;;;;;:29;;;;;;;;;;;2705:3;2689:28;;2698:5;2689:28;;;2710:6;2689:28;;;;;;;;;;;;;;;;;;2273:451;;;:::o;9671:329:9:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;9905:16;;:7;:16;;;:51;;;;9949:7;9925:31;;:20;9937:7;9925:11;:20::i;:::-;:31;;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9905:87;9897:96;;;9671:329;;;;:::o;13281:447::-;13394:4;13374:24;;:16;13382:7;13374;:16::i;:::-;:24;;;13366:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13476:1;13462:16;;:2;:16;;;;13454:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;13564:35;:17;:23;13582:4;13564:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13609:33;:17;:21;13627:2;13609:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13676:2;13653:11;:20;13665:7;13653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13713:7;13709:2;13694:27;;13703:4;13694:27;;;;;;;;;;;;13281:447;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11714:327:9:-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;1183:89:5:-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;8694:269:9:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8694:269;;;;:::o;14828:171::-;14927:1;14891:38;;:15;:24;14907:7;14891:24;;;;;;;;;;;;;;;;;;;;;:38;;;14887:106;;14980:1;14945:15;:24;14961:7;14945:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;14887:106;14828:171;:::o;1278:108:5:-;1358:21;1377:1;1358:7;:14;;;:18;;:21;;;;:::i;:::-;1341:7;:14;;:38;;;;1278:108;:::o;14317:349:9:-;14438:4;14463:15;:2;:13;;;:15::i;:::-;14458:58;;14501:4;14494:11;;;;14458:58;14526:13;14558:2;14542:36;;;14579:12;:10;:12::i;:::-;14593:4;14599:7;14608:5;14542:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14542:72:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14542:72:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14542:72:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14542:72:9;;;;;;;;;;;;;;;;14526:88;;754:10;14642:16;;14632:26;;;:6;:26;;;;14624:35;;;14317:349;;;;;;;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;557:797:12:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o;1732:187:8:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;394:5910:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\nimport \"./ERC20CYT.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\";\n\n/// @title A dapp for create request\n/// @author Jordi Guirao\n/// @notice Dapp to create requests to a city council, for example. If the requests are solved, the user will earn token\ncontract RequestCity is ERC721, ERC20CYT(1) {\n    \n    using Counters for Counters.Counter;\n    \n    uint public requestPrice = 0.01 ether;\n    \n    Counters.Counter private tokenID;\n    \n    uint public tokenReward = 10;\n   \n    struct Request {\n        uint id;\n        uint dateOfIssue;\n        string ipfsHash;\n        address payable applicant;\n        string city;\n        string requestAddress;\n        string description;\n        Priority priority;\n        State state;\n    }\n    \n    enum Priority {high, medium, low}\n    enum State {requested, solved, denied}\n    \n    mapping(uint256 => Request) public requests;\n    mapping(address => uint[]) public applicantRequests;\n    \n    event NewRequest(uint requestID, address applicant, string ipfsHash, string city, string requestAddress);\n    event AccidentalDeposit(address sender, uint value);\n    event WithdrawEvent(address owner, uint value);\n    event StateUpdate(uint requestID, State state);\n    \n    /// @author Jordi Guirao\n    /// @notice create a new Request\n    /// @param _ipfsHash ipsfhash of the image\n    /// @param _city Nambe of the city\n    /// @param _requestAddress Address where is the event found\n    /// @param _description Description of the request\n    /// @param _priority Priority that need the request to be solved\n    function createRequest(string memory _ipfsHash, string memory _city, string memory _requestAddress, string memory _description,\n    Priority _priority) public payable {\n        require(msg.value >= requestPrice, \"You need to pay more ether to create a request\");\n        uint ID = tokenID.current();\n        _mint(msg.sender, ID);\n        Request memory request = Request(ID, now, _ipfsHash, msg.sender, _city, _requestAddress, _description, _priority, State.requested);\n        requests[ID] = request;\n        uint[] storage apliRequests = applicantRequests[msg.sender];\n        apliRequests.push(ID);\n        tokenID.increment();\n        emit NewRequest(ID, msg.sender, _ipfsHash, _city, _requestAddress);\n    }\n\n    /// @author Jordi Guirao\n    /// @notice get request information\n    /// @param _requestID ID of the request\n    /// @return request details\n    function getRequest(uint256 _requestID) external view returns(uint _id, uint _dateOfIssue, string memory _ipfsHash, address _applicant, string memory _city, string memory _requestAddress, string memory _description\n    , Priority, State) {\n        require(_exists(_requestID), \"This request ID doe not exists\");\n        Request storage request = requests[_requestID];\n        return (request.id, request.dateOfIssue, request.ipfsHash, request.applicant, request.city, request.requestAddress, request.description, request.priority, request.state);\n    }\n    \n    /// @author Jordi Guirao\n    /// @notice get all the request that a user has made.\n    /// @return an array with the id of the requests that msg.sender has done.\n    function getUserRequests() external view returns (uint[] memory){\n        require(balanceOf(msg.sender) > 0, \"msg.sender has not made any request\");\n        return applicantRequests[msg.sender];\n    }\n\n    /// @author Jordi Guirao\n    /// @notice get the number of requests made by msg.sender\n    /// @return number of requests\n    function getNumberOfRequests() external view returns (uint){\n        return balanceOf(msg.sender);\n    }\n\n    /// @author Jordi Guirao\n    /// @notice change the request state to solve denied. Only onlyOwners can do it\n    /// @param _requestID id of the request\n    /// @return new request state\n    function denyRequest(uint _requestID) public onlyOwner returns (State) {\n        require(requests[_requestID].state == State.requested, \"The request state is not'requested'\");\n        Request storage request = requests[_requestID];\n        request.state = State.denied;\n        emit StateUpdate(_requestID, request.state);\n        return request.state;\n    }\n\n    /// @author Jordi Guirao\n    /// @notice change the request state to solved. Only onlyOwners can do it\n    /// @param _requestID id of the request\n    /// @return new request state\n     function solveRequest(uint _requestID) public onlyOwner returns (State) {\n        require(requests[_requestID].state == State.requested, \"The request state is not'requested'\");\n        Request storage request = requests[_requestID];\n        request.state = State.solved;\n        mintToken(request.applicant, tokenReward);\n        emit StateUpdate(_requestID, request.state);\n        return request.state;\n    }\n\n    \n    /// @author Jordi Guirao\n    /// @notice change the requestPrice\n    /// @param _newprice new request price in wei\n    /// @return Updated price of the request\n    function setRequestPrice (uint _newprice) public onlyOwner returns (uint) {\n        requestPrice = _newprice * 1 ether;\n        return requestPrice;\n    }\n\n    /// @author Jordi Guirao\n    /// @notice change the tokenReward\n    /// @param _newTokenReward new request price in wei\n    /// @return Updated price of the request\n    function setTokenReward (uint _newTokenReward) public onlyOwner returns (uint) {\n        tokenReward = _newTokenReward;\n        return tokenReward;\n    }\n    \n    /// @author Jordi Guirao\n    /// @notice obtain the balance of the contract address\n    /// @return contracts balance\n    function contractBalance() external view onlyOwner returns(uint) {\n        return address(this).balance;\n    }\n\n    /// @author Jordi Guirao\n    /// @notice owner can withdraw the contract balance\n    function withdrawBalance() external onlyOwner {\n        address payable owner = msg.sender;\n        owner.transfer(address(this).balance);\n        emit WithdrawEvent(owner, address(this).balance);\n    }\n    \n     ///@author Jordi Guirao\n     ///@dev Fallback function allows to deposit ether.\n    function() external payable {\n        if (msg.value > 0) {\n            emit AccidentalDeposit(msg.sender, msg.value);\n\t    }\n    }\n}",
  "sourcePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/RequestCity.sol",
  "ast": {
    "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/RequestCity.sol",
    "exportedSymbols": {
      "RequestCity": [
        909
      ]
    },
    "id": 910,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 464,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 465,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 1872,
        "src": "25:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/ERC20CYT.sol",
        "file": "./ERC20CYT.sol",
        "id": 466,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 309,
        "src": "107:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
        "id": 467,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 986,
        "src": "132:77:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 468,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1871,
              "src": "418:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1871",
                "typeString": "contract ERC721"
              }
            },
            "id": 469,
            "nodeType": "InheritanceSpecifier",
            "src": "418:6:3"
          },
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 471,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "435:1:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 470,
              "name": "ERC20CYT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 308,
              "src": "426:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20CYT_$308",
                "typeString": "contract ERC20CYT"
              }
            },
            "id": 472,
            "nodeType": "InheritanceSpecifier",
            "src": "426:11:3"
          }
        ],
        "contractDependencies": [
          308,
          462,
          936,
          1037,
          1047,
          1871,
          1974
        ],
        "contractKind": "contract",
        "documentation": "@title A dapp for create request\n @author Jordi Guirao\n @notice Dapp to create requests to a city council, for example. If the requests are solved, the user will earn token",
        "fullyImplemented": true,
        "id": 909,
        "linearizedBaseContracts": [
          909,
          308,
          462,
          1871,
          1974,
          1037,
          1047,
          936
        ],
        "name": "RequestCity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 475,
            "libraryName": {
              "contractScope": null,
              "id": 473,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 985,
              "src": "455:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$985",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "449:36:3",
            "typeName": {
              "contractScope": null,
              "id": 474,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 945,
              "src": "468:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$945_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 478,
            "name": "requestPrice",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "495:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 476,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "495:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e3031",
              "id": 477,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "522:10:3",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 480,
            "name": "tokenID",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "543:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$945_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 479,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 945,
              "src": "543:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$945_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 483,
            "name": "tokenReward",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "586:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 481,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "586:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "612:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RequestCity.Request",
            "id": 502,
            "members": [
              {
                "constant": false,
                "id": 485,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "649:7:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 484,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "649:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 487,
                "name": "dateOfIssue",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "666:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 486,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 489,
                "name": "ipfsHash",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "692:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 488,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 491,
                "name": "applicant",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "717:25:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 490,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:15:3",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 493,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "752:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 492,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 495,
                "name": "requestAddress",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "773:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 494,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "773:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 497,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "804:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 496,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "804:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 499,
                "name": "priority",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "832:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Priority_$506",
                  "typeString": "enum RequestCity.Priority"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 498,
                  "name": "Priority",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 506,
                  "src": "832:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Priority_$506",
                    "typeString": "enum RequestCity.Priority"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 501,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "859:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$510",
                  "typeString": "enum RequestCity.State"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 500,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 510,
                  "src": "859:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nodeType": "StructDefinition",
            "scope": 909,
            "src": "624:253:3",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestCity.Priority",
            "id": 506,
            "members": [
              {
                "id": 503,
                "name": "high",
                "nodeType": "EnumValue",
                "src": "902:4:3"
              },
              {
                "id": 504,
                "name": "medium",
                "nodeType": "EnumValue",
                "src": "908:6:3"
              },
              {
                "id": 505,
                "name": "low",
                "nodeType": "EnumValue",
                "src": "916:3:3"
              }
            ],
            "name": "Priority",
            "nodeType": "EnumDefinition",
            "src": "887:33:3"
          },
          {
            "canonicalName": "RequestCity.State",
            "id": 510,
            "members": [
              {
                "id": 507,
                "name": "requested",
                "nodeType": "EnumValue",
                "src": "937:9:3"
              },
              {
                "id": 508,
                "name": "solved",
                "nodeType": "EnumValue",
                "src": "948:6:3"
              },
              {
                "id": 509,
                "name": "denied",
                "nodeType": "EnumValue",
                "src": "956:6:3"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "925:38:3"
          },
          {
            "constant": false,
            "id": 514,
            "name": "requests",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "973:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
              "typeString": "mapping(uint256 => struct RequestCity.Request)"
            },
            "typeName": {
              "id": 513,
              "keyType": {
                "id": 511,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "981:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "973:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                "typeString": "mapping(uint256 => struct RequestCity.Request)"
              },
              "valueType": {
                "contractScope": null,
                "id": 512,
                "name": "Request",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 502,
                "src": "992:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                  "typeString": "struct RequestCity.Request"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 519,
            "name": "applicantRequests",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "1022:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 518,
              "keyType": {
                "id": 515,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1022:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 516,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1041:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 517,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1041:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 531,
            "name": "NewRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "indexed": false,
                  "name": "requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1101:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "indexed": false,
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1117:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "indexed": false,
                  "name": "ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1136:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "indexed": false,
                  "name": "city",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1153:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "indexed": false,
                  "name": "requestAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1166:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1100:88:3"
            },
            "src": "1084:105:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 537,
            "name": "AccidentalDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "1218:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "1234:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1217:28:3"
            },
            "src": "1194:52:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 543,
            "name": "WithdrawEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "1271:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "1286:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1270:27:3"
            },
            "src": "1251:47:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 549,
            "name": "StateUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "indexed": false,
                  "name": "requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1321:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1337:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 546,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "1337:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1320:29:3"
            },
            "src": "1303:47:3"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "1867:546:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "1885:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1885:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "requestPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "1898:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1885:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f20706179206d6f726520657468657220746f2063726561746520612072657175657374",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1912:48:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67287562312ab8ca0b1611c4cbe312065bc9f7cd7d98b58968b6fc4609011f39",
                          "typeString": "literal_string \"You need to pay more ether to create a request\""
                        },
                        "value": "You need to pay more ether to create a request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67287562312ab8ca0b1611c4cbe312065bc9f7cd7d98b58968b6fc4609011f39",
                          "typeString": "literal_string \"You need to pay more ether to create a request\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "1877:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:84:3"
                },
                {
                  "assignments": [
                    571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 571,
                      "name": "ID",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "1971:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 570,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1971:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 575,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1981:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$945_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 956,
                      "src": "1981:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$945_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$945_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1971:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 577,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2014:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2014:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2026:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 576,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "2008:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2008:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:21:3"
                },
                {
                  "assignments": [
                    583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 583,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "2039:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_memory_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 582,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "2039:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2072:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 586,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "2076:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "2081:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2092:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2092:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "_city",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2104:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "_requestAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "2111:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "2128:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "_priority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "2142:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Priority_$506",
                          "typeString": "enum RequestCity.Priority"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "2153:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                            "typeString": "type(enum RequestCity.State)"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "requested",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2153:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Priority_$506",
                          "typeString": "enum RequestCity.Priority"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      ],
                      "id": 584,
                      "name": "Request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "2064:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Request_$502_storage_ptr_$",
                        "typeString": "type(struct RequestCity.Request storage pointer)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:105:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_memory",
                      "typeString": "struct RequestCity.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2039:130:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "requests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "2179:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                          "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                        }
                      },
                      "id": 600,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2188:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2179:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage",
                        "typeString": "struct RequestCity.Request storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "2194:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_memory_ptr",
                        "typeString": "struct RequestCity.Request memory"
                      }
                    },
                    "src": "2179:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:22:3"
                },
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "name": "apliRequests",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "2211:27:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 605,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2211:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2211:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 612,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "applicantRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "2241:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 611,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 609,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "2259:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2259:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2241:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2211:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2298:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "apliRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "2280:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2280:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "2311:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$945_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 968,
                      "src": "2311:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$945_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$945_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:19:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 625,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2356:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2360:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2360:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "2372:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 629,
                        "name": "_city",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2383:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "_requestAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "2390:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 624,
                      "name": "NewRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "2345:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,string memory,string memory,string memory)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "EmitStatement",
                  "src": "2340:66:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice create a new Request\n @param _ipfsHash ipsfhash of the image\n @param _city Nambe of the city\n @param _requestAddress Address where is the event found\n @param _description Description of the request\n @param _priority Priority that need the request to be solved",
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1723:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "name": "_city",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1748:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "_requestAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1769:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1800:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_priority",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1832:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Priority_$506",
                    "typeString": "enum RequestCity.Priority"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 558,
                    "name": "Priority",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 506,
                    "src": "1832:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Priority_$506",
                      "typeString": "enum RequestCity.Priority"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1722:129:3"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1867:0:3"
            },
            "scope": 909,
            "src": "1700:713:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "2802:314:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "_requestID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2828:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 658,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1570,
                          "src": "2820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686973207265717565737420494420646f65206e6f7420657869737473",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2841:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a14973a022aadd6d6716d696045eb9efef9d0ef3eec58b5a6e1dd4d22f700bbd",
                          "typeString": "literal_string \"This request ID doe not exists\""
                        },
                        "value": "This request ID doe not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a14973a022aadd6d6716d696045eb9efef9d0ef3eec58b5a6e1dd4d22f700bbd",
                          "typeString": "literal_string \"This request ID doe not exists\""
                        }
                      ],
                      "id": 657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "2812:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:62:3"
                },
                {
                  "assignments": [
                    665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 665,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "2884:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 664,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "2884:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 666,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "2910:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                        "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                      }
                    },
                    "id": 668,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 667,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "2919:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2910:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2884:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 670,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2948:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 485,
                        "src": "2948:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2960:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dateOfIssue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 487,
                        "src": "2960:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 674,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2981:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ipfsHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 489,
                        "src": "2981:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 676,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2999:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 491,
                        "src": "2999:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 678,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3018:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "city",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 493,
                        "src": "3018:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 680,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "3032:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3056:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "description",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 497,
                        "src": "3056:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3077:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "priority",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 499,
                        "src": "3077:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Priority_$506",
                          "typeString": "enum RequestCity.Priority"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3095:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 501,
                        "src": "3095:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "id": 688,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2947:162:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_string_storage_$_t_address_payable_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_enum$_Priority_$506_$_t_enum$_State_$510_$",
                      "typeString": "tuple(uint256,uint256,string storage ref,address payable,string storage ref,string storage ref,string storage ref,enum RequestCity.Priority,enum RequestCity.State)"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "2940:169:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice get request information\n @param _requestID ID of the request\n @return request details",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "_requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2584:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2583:20:3"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2626:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "name": "_dateOfIssue",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2636:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2655:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 645,
                  "name": "_applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2680:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "_city",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2700:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "_requestAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2721:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2752:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2785:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Priority_$506",
                    "typeString": "enum RequestCity.Priority"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 652,
                    "name": "Priority",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 506,
                    "src": "2785:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Priority_$506",
                      "typeString": "enum RequestCity.Priority"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2795:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 654,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "2795:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2625:176:3"
            },
            "scope": 909,
            "src": "2564:552:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "3356:136:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 699,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2080,
                                "src": "3384:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3384:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 698,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1313
                            ],
                            "referencedDeclaration": 1313,
                            "src": "3374:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3374:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3398:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3374:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d73672e73656e64657220686173206e6f74206d61646520616e792072657175657374",
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3401:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c8e939229451fc2e45c14bcb705c8561a4fc5337af80ae13a31f54799bf1bf8",
                          "typeString": "literal_string \"msg.sender has not made any request\""
                        },
                        "value": "msg.sender has not made any request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c8e939229451fc2e45c14bcb705c8561a4fc5337af80ae13a31f54799bf1bf8",
                          "typeString": "literal_string \"msg.sender has not made any request\""
                        }
                      ],
                      "id": 697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "3366:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3366:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:73:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 707,
                      "name": "applicantRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "3456:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 710,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 708,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "3474:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3474:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3456:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 696,
                  "id": 711,
                  "nodeType": "Return",
                  "src": "3449:36:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice get all the request that a user has made.\n @return an array with the id of the requests that msg.sender has done.",
            "id": 713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRequests",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:2:3"
            },
            "returnParameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "3342:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 693,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3342:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 694,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3342:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3341:15:3"
            },
            "scope": 909,
            "src": "3292:200:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "3683:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 719,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "3710:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3710:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 718,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1313
                      ],
                      "referencedDeclaration": 1313,
                      "src": "3700:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3700:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 717,
                  "id": 722,
                  "nodeType": "Return",
                  "src": "3693:28:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice get the number of requests made by msg.sender\n @return number of requests",
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfRequests",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:2:3"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "3678:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3677:6:3"
            },
            "scope": 909,
            "src": "3624:104:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "3996:287:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 734,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "4014:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                                "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 735,
                              "name": "_requestID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 726,
                              "src": "4023:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4014:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$502_storage",
                              "typeString": "struct RequestCity.Request storage ref"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 501,
                          "src": "4014:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 738,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "4044:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                              "typeString": "type(enum RequestCity.State)"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4044:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "src": "4014:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652072657175657374207374617465206973206e6f742772657175657374656427",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4061:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        },
                        "value": "The request state is not'requested'"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        }
                      ],
                      "id": 733,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "4006:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4006:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:93:3"
                },
                {
                  "assignments": [
                    745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 745,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 766,
                      "src": "4109:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 744,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "4109:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 749,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "4135:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                        "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                      }
                    },
                    "id": 748,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 747,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "4144:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4135:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4109:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 750,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "4165:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request storage pointer"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 501,
                      "src": "4165:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "4181:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                          "typeString": "type(enum RequestCity.State)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "denied",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4181:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "src": "4165:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "4165:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 758,
                        "name": "_requestID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "4220:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 759,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "4232:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 501,
                        "src": "4232:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      ],
                      "id": 757,
                      "name": "StateUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "4208:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$510_$returns$__$",
                        "typeString": "function (uint256,enum RequestCity.State)"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "EmitStatement",
                  "src": "4203:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 763,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "4263:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request storage pointer"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 501,
                    "src": "4263:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "functionReturnParameters": 732,
                  "id": 765,
                  "nodeType": "Return",
                  "src": "4256:20:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the request state to solve denied. Only onlyOwners can do it\n @param _requestID id of the request\n @return new request state",
            "id": 767,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 728,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "3970:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3970:9:3"
              }
            ],
            "name": "denyRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "name": "_requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "3946:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3945:17:3"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "3989:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 730,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "3989:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3988:7:3"
            },
            "scope": 909,
            "src": "3925:358:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "4547:338:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 777,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "4565:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                                "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                              }
                            },
                            "id": 779,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 778,
                              "name": "_requestID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "4574:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4565:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$502_storage",
                              "typeString": "struct RequestCity.Request storage ref"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 501,
                          "src": "4565:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 781,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "4595:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                              "typeString": "type(enum RequestCity.State)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4595:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "src": "4565:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652072657175657374207374617465206973206e6f742772657175657374656427",
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4612:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        },
                        "value": "The request state is not'requested'"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        }
                      ],
                      "id": 776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "4557:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4557:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:93:3"
                },
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 815,
                      "src": "4660:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 787,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "4660:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "4686:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                        "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                      }
                    },
                    "id": 791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "4695:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4686:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4660:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "4716:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request storage pointer"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 501,
                      "src": "4716:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "4732:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                          "typeString": "type(enum RequestCity.State)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4732:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "src": "4716:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 801,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "4764:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 491,
                        "src": "4764:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "tokenReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "4783:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 800,
                      "name": "mintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "4754:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "4754:41:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 807,
                        "name": "_requestID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "4822:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 808,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "4834:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 501,
                        "src": "4834:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      ],
                      "id": 806,
                      "name": "StateUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "4810:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$510_$returns$__$",
                        "typeString": "function (uint256,enum RequestCity.State)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4810:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "EmitStatement",
                  "src": "4805:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "4865:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request storage pointer"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 501,
                    "src": "4865:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "functionReturnParameters": 775,
                  "id": 814,
                  "nodeType": "Return",
                  "src": "4858:20:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the request state to solved. Only onlyOwners can do it\n @param _requestID id of the request\n @return new request state",
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "4521:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4521:9:3"
              }
            ],
            "name": "solveRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "name": "_requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4497:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4497:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4496:17:3"
            },
            "returnParameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4540:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 773,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "4540:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4539:7:3"
            },
            "scope": 909,
            "src": "4475:410:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 833,
              "nodeType": "Block",
              "src": "5134:80:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 825,
                      "name": "requestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "5144:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 826,
                        "name": "_newprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "5159:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:7:3",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "5159:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5144:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "5144:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 831,
                    "name": "requestPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 478,
                    "src": "5195:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 824,
                  "id": 832,
                  "nodeType": "Return",
                  "src": "5188:19:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the requestPrice\n @param _newprice new request price in wei\n @return Updated price of the request",
            "id": 834,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 820,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5109:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5109:9:3"
              }
            ],
            "name": "setRequestPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "_newprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "5086:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5086:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5085:16:3"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "5128:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5127:6:3"
            },
            "scope": 909,
            "src": "5060:154:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 849,
              "nodeType": "Block",
              "src": "5468:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 843,
                      "name": "tokenReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "5478:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 844,
                      "name": "_newTokenReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "5492:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5478:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 847,
                    "name": "tokenReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 483,
                    "src": "5524:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 842,
                  "id": 848,
                  "nodeType": "Return",
                  "src": "5517:18:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the tokenReward\n @param _newTokenReward new request price in wei\n @return Updated price of the request",
            "id": 850,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 839,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 838,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5443:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5443:9:3"
              }
            ],
            "name": "setTokenReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "name": "_newTokenReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "5414:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5413:22:3"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "5462:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5461:6:3"
            },
            "scope": 909,
            "src": "5389:153:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "5739:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 858,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2118,
                          "src": "5764:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RequestCity_$909",
                            "typeString": "contract RequestCity"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RequestCity_$909",
                            "typeString": "contract RequestCity"
                          }
                        ],
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5756:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5756:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5756:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 856,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "5749:28:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice obtain the balance of the contract address\n @return contracts balance",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 853,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 852,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5715:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5715:9:3"
              }
            ],
            "name": "contractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5698:2:3"
            },
            "returnParameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "5733:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5732:6:3"
            },
            "scope": 909,
            "src": "5674:110:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "5921:156:3",
              "statements": [
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "5931:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5931:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 872,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 870,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2080,
                      "src": "5955:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5955:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5931:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 877,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2118,
                              "src": "5998:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            ],
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5990:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5990:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5990:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "5975:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5975:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5975:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "5975:37:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "6041:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 885,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2118,
                              "src": "6056:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            ],
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6048:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6048:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6048:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 882,
                      "name": "WithdrawEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "6027:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6027:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 889,
                  "nodeType": "EmitStatement",
                  "src": "6022:48:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice owner can withdraw the contract balance",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 866,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 865,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5911:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5911:9:3"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5899:2:3"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5921:0:3"
            },
            "scope": 909,
            "src": "5875:202:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "6200:102:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "6214:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6214:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6226:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6214:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 906,
                  "nodeType": "IfStatement",
                  "src": "6210:86:3",
                  "trueBody": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "6229:67:3",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 899,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2080,
                                "src": "6266:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6266:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 901,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2080,
                                "src": "6278:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6278:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 898,
                            "name": "AccidentalDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "6248:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6248:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 904,
                        "nodeType": "EmitStatement",
                        "src": "6243:45:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n@dev Fallback function allows to deposit ether.",
            "id": 908,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6180:2:3"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6200:0:3"
            },
            "scope": 909,
            "src": "6172:130:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 910,
        "src": "394:5910:3"
      }
    ],
    "src": "0:6304:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/RequestCity.sol",
    "exportedSymbols": {
      "RequestCity": [
        909
      ]
    },
    "id": 910,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 464,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 465,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 1872,
        "src": "25:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/contracts/ERC20CYT.sol",
        "file": "./ERC20CYT.sol",
        "id": 466,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 309,
        "src": "107:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jordiguiraomuns/Documents/GitHub/FinalProject_ConsenSysAcademy2019_DeveloperBootcamp/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
        "id": 467,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 986,
        "src": "132:77:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 468,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1871,
              "src": "418:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1871",
                "typeString": "contract ERC721"
              }
            },
            "id": 469,
            "nodeType": "InheritanceSpecifier",
            "src": "418:6:3"
          },
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 471,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "435:1:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 470,
              "name": "ERC20CYT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 308,
              "src": "426:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20CYT_$308",
                "typeString": "contract ERC20CYT"
              }
            },
            "id": 472,
            "nodeType": "InheritanceSpecifier",
            "src": "426:11:3"
          }
        ],
        "contractDependencies": [
          308,
          462,
          936,
          1037,
          1047,
          1871,
          1974
        ],
        "contractKind": "contract",
        "documentation": "@title A dapp for create request\n @author Jordi Guirao\n @notice Dapp to create requests to a city council, for example. If the requests are solved, the user will earn token",
        "fullyImplemented": true,
        "id": 909,
        "linearizedBaseContracts": [
          909,
          308,
          462,
          1871,
          1974,
          1037,
          1047,
          936
        ],
        "name": "RequestCity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 475,
            "libraryName": {
              "contractScope": null,
              "id": 473,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 985,
              "src": "455:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$985",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "449:36:3",
            "typeName": {
              "contractScope": null,
              "id": 474,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 945,
              "src": "468:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$945_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 478,
            "name": "requestPrice",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "495:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 476,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "495:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e3031",
              "id": 477,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "522:10:3",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 480,
            "name": "tokenID",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "543:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$945_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 479,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 945,
              "src": "543:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$945_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 483,
            "name": "tokenReward",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "586:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 481,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "586:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "612:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RequestCity.Request",
            "id": 502,
            "members": [
              {
                "constant": false,
                "id": 485,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "649:7:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 484,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "649:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 487,
                "name": "dateOfIssue",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "666:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 486,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 489,
                "name": "ipfsHash",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "692:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 488,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 491,
                "name": "applicant",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "717:25:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 490,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:15:3",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 493,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "752:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 492,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 495,
                "name": "requestAddress",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "773:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 494,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "773:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 497,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "804:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 496,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "804:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 499,
                "name": "priority",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "832:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Priority_$506",
                  "typeString": "enum RequestCity.Priority"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 498,
                  "name": "Priority",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 506,
                  "src": "832:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Priority_$506",
                    "typeString": "enum RequestCity.Priority"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 501,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 502,
                "src": "859:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$510",
                  "typeString": "enum RequestCity.State"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 500,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 510,
                  "src": "859:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nodeType": "StructDefinition",
            "scope": 909,
            "src": "624:253:3",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestCity.Priority",
            "id": 506,
            "members": [
              {
                "id": 503,
                "name": "high",
                "nodeType": "EnumValue",
                "src": "902:4:3"
              },
              {
                "id": 504,
                "name": "medium",
                "nodeType": "EnumValue",
                "src": "908:6:3"
              },
              {
                "id": 505,
                "name": "low",
                "nodeType": "EnumValue",
                "src": "916:3:3"
              }
            ],
            "name": "Priority",
            "nodeType": "EnumDefinition",
            "src": "887:33:3"
          },
          {
            "canonicalName": "RequestCity.State",
            "id": 510,
            "members": [
              {
                "id": 507,
                "name": "requested",
                "nodeType": "EnumValue",
                "src": "937:9:3"
              },
              {
                "id": 508,
                "name": "solved",
                "nodeType": "EnumValue",
                "src": "948:6:3"
              },
              {
                "id": 509,
                "name": "denied",
                "nodeType": "EnumValue",
                "src": "956:6:3"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "925:38:3"
          },
          {
            "constant": false,
            "id": 514,
            "name": "requests",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "973:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
              "typeString": "mapping(uint256 => struct RequestCity.Request)"
            },
            "typeName": {
              "id": 513,
              "keyType": {
                "id": 511,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "981:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "973:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                "typeString": "mapping(uint256 => struct RequestCity.Request)"
              },
              "valueType": {
                "contractScope": null,
                "id": 512,
                "name": "Request",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 502,
                "src": "992:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                  "typeString": "struct RequestCity.Request"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 519,
            "name": "applicantRequests",
            "nodeType": "VariableDeclaration",
            "scope": 909,
            "src": "1022:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 518,
              "keyType": {
                "id": 515,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1022:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 516,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1041:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 517,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1041:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 531,
            "name": "NewRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "indexed": false,
                  "name": "requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1101:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "indexed": false,
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1117:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "indexed": false,
                  "name": "ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1136:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "indexed": false,
                  "name": "city",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1153:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "indexed": false,
                  "name": "requestAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "1166:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1100:88:3"
            },
            "src": "1084:105:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 537,
            "name": "AccidentalDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "1218:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "1234:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1217:28:3"
            },
            "src": "1194:52:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 543,
            "name": "WithdrawEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "1271:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "1286:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1270:27:3"
            },
            "src": "1251:47:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 549,
            "name": "StateUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "indexed": false,
                  "name": "requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1321:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1337:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 546,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "1337:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1320:29:3"
            },
            "src": "1303:47:3"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "1867:546:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "1885:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1885:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "requestPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "1898:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1885:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f20706179206d6f726520657468657220746f2063726561746520612072657175657374",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1912:48:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67287562312ab8ca0b1611c4cbe312065bc9f7cd7d98b58968b6fc4609011f39",
                          "typeString": "literal_string \"You need to pay more ether to create a request\""
                        },
                        "value": "You need to pay more ether to create a request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67287562312ab8ca0b1611c4cbe312065bc9f7cd7d98b58968b6fc4609011f39",
                          "typeString": "literal_string \"You need to pay more ether to create a request\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "1877:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:84:3"
                },
                {
                  "assignments": [
                    571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 571,
                      "name": "ID",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "1971:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 570,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1971:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 575,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1981:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$945_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 956,
                      "src": "1981:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$945_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$945_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1971:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 577,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2014:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2014:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2026:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 576,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "2008:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2008:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:21:3"
                },
                {
                  "assignments": [
                    583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 583,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "2039:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_memory_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 582,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "2039:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2072:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 586,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "2076:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "2081:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2092:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2092:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "_city",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2104:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "_requestAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "2111:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "2128:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "_priority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "2142:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Priority_$506",
                          "typeString": "enum RequestCity.Priority"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "2153:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                            "typeString": "type(enum RequestCity.State)"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "requested",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2153:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Priority_$506",
                          "typeString": "enum RequestCity.Priority"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      ],
                      "id": 584,
                      "name": "Request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "2064:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Request_$502_storage_ptr_$",
                        "typeString": "type(struct RequestCity.Request storage pointer)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:105:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_memory",
                      "typeString": "struct RequestCity.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2039:130:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "requests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "2179:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                          "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                        }
                      },
                      "id": 600,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2188:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2179:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage",
                        "typeString": "struct RequestCity.Request storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "2194:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_memory_ptr",
                        "typeString": "struct RequestCity.Request memory"
                      }
                    },
                    "src": "2179:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:22:3"
                },
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "name": "apliRequests",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "2211:27:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 605,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2211:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2211:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 612,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "applicantRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "2241:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 611,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 609,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "2259:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2259:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2241:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2211:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2298:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "apliRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "2280:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2280:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "2311:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$945_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 968,
                      "src": "2311:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$945_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$945_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:19:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 625,
                        "name": "ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2356:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2360:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2360:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "2372:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 629,
                        "name": "_city",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2383:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "_requestAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "2390:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 624,
                      "name": "NewRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "2345:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,string memory,string memory,string memory)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "EmitStatement",
                  "src": "2340:66:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice create a new Request\n @param _ipfsHash ipsfhash of the image\n @param _city Nambe of the city\n @param _requestAddress Address where is the event found\n @param _description Description of the request\n @param _priority Priority that need the request to be solved",
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1723:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "name": "_city",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1748:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "_requestAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1769:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1800:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_priority",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "1832:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Priority_$506",
                    "typeString": "enum RequestCity.Priority"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 558,
                    "name": "Priority",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 506,
                    "src": "1832:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Priority_$506",
                      "typeString": "enum RequestCity.Priority"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1722:129:3"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1867:0:3"
            },
            "scope": 909,
            "src": "1700:713:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "2802:314:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "_requestID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2828:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 658,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1570,
                          "src": "2820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686973207265717565737420494420646f65206e6f7420657869737473",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2841:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a14973a022aadd6d6716d696045eb9efef9d0ef3eec58b5a6e1dd4d22f700bbd",
                          "typeString": "literal_string \"This request ID doe not exists\""
                        },
                        "value": "This request ID doe not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a14973a022aadd6d6716d696045eb9efef9d0ef3eec58b5a6e1dd4d22f700bbd",
                          "typeString": "literal_string \"This request ID doe not exists\""
                        }
                      ],
                      "id": 657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "2812:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:62:3"
                },
                {
                  "assignments": [
                    665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 665,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "2884:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 664,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "2884:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 666,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "2910:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                        "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                      }
                    },
                    "id": 668,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 667,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "2919:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2910:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2884:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 670,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2948:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 485,
                        "src": "2948:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2960:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dateOfIssue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 487,
                        "src": "2960:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 674,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2981:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ipfsHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 489,
                        "src": "2981:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 676,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "2999:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 491,
                        "src": "2999:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 678,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3018:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "city",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 493,
                        "src": "3018:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 680,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "3032:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3056:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "description",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 497,
                        "src": "3056:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3077:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "priority",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 499,
                        "src": "3077:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Priority_$506",
                          "typeString": "enum RequestCity.Priority"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3095:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 501,
                        "src": "3095:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "id": 688,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2947:162:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_string_storage_$_t_address_payable_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_enum$_Priority_$506_$_t_enum$_State_$510_$",
                      "typeString": "tuple(uint256,uint256,string storage ref,address payable,string storage ref,string storage ref,string storage ref,enum RequestCity.Priority,enum RequestCity.State)"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "2940:169:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice get request information\n @param _requestID ID of the request\n @return request details",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "_requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2584:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2583:20:3"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2626:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "name": "_dateOfIssue",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2636:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2655:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 645,
                  "name": "_applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2680:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "_city",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2700:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "_requestAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2721:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2752:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2785:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Priority_$506",
                    "typeString": "enum RequestCity.Priority"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 652,
                    "name": "Priority",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 506,
                    "src": "2785:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Priority_$506",
                      "typeString": "enum RequestCity.Priority"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "2795:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 654,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "2795:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2625:176:3"
            },
            "scope": 909,
            "src": "2564:552:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "3356:136:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 699,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2080,
                                "src": "3384:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3384:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 698,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1313
                            ],
                            "referencedDeclaration": 1313,
                            "src": "3374:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3374:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3398:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3374:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d73672e73656e64657220686173206e6f74206d61646520616e792072657175657374",
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3401:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c8e939229451fc2e45c14bcb705c8561a4fc5337af80ae13a31f54799bf1bf8",
                          "typeString": "literal_string \"msg.sender has not made any request\""
                        },
                        "value": "msg.sender has not made any request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c8e939229451fc2e45c14bcb705c8561a4fc5337af80ae13a31f54799bf1bf8",
                          "typeString": "literal_string \"msg.sender has not made any request\""
                        }
                      ],
                      "id": 697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "3366:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3366:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:73:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 707,
                      "name": "applicantRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "3456:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 710,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 708,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "3474:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3474:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3456:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 696,
                  "id": 711,
                  "nodeType": "Return",
                  "src": "3449:36:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice get all the request that a user has made.\n @return an array with the id of the requests that msg.sender has done.",
            "id": 713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRequests",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:2:3"
            },
            "returnParameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "3342:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 693,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3342:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 694,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3342:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3341:15:3"
            },
            "scope": 909,
            "src": "3292:200:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "3683:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 719,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "3710:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3710:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 718,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1313
                      ],
                      "referencedDeclaration": 1313,
                      "src": "3700:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3700:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 717,
                  "id": 722,
                  "nodeType": "Return",
                  "src": "3693:28:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice get the number of requests made by msg.sender\n @return number of requests",
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfRequests",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:2:3"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "3678:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3677:6:3"
            },
            "scope": 909,
            "src": "3624:104:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "3996:287:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 734,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "4014:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                                "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 735,
                              "name": "_requestID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 726,
                              "src": "4023:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4014:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$502_storage",
                              "typeString": "struct RequestCity.Request storage ref"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 501,
                          "src": "4014:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 738,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "4044:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                              "typeString": "type(enum RequestCity.State)"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4044:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "src": "4014:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652072657175657374207374617465206973206e6f742772657175657374656427",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4061:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        },
                        "value": "The request state is not'requested'"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        }
                      ],
                      "id": 733,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "4006:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4006:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:93:3"
                },
                {
                  "assignments": [
                    745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 745,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 766,
                      "src": "4109:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 744,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "4109:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 749,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "4135:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                        "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                      }
                    },
                    "id": 748,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 747,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "4144:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4135:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4109:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 750,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "4165:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request storage pointer"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 501,
                      "src": "4165:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "4181:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                          "typeString": "type(enum RequestCity.State)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "denied",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4181:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "src": "4165:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "4165:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 758,
                        "name": "_requestID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "4220:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 759,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "4232:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 501,
                        "src": "4232:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      ],
                      "id": 757,
                      "name": "StateUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "4208:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$510_$returns$__$",
                        "typeString": "function (uint256,enum RequestCity.State)"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "EmitStatement",
                  "src": "4203:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 763,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "4263:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request storage pointer"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 501,
                    "src": "4263:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "functionReturnParameters": 732,
                  "id": 765,
                  "nodeType": "Return",
                  "src": "4256:20:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the request state to solve denied. Only onlyOwners can do it\n @param _requestID id of the request\n @return new request state",
            "id": 767,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 728,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "3970:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3970:9:3"
              }
            ],
            "name": "denyRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "name": "_requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "3946:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3945:17:3"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "3989:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 730,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "3989:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3988:7:3"
            },
            "scope": 909,
            "src": "3925:358:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "4547:338:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 777,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "4565:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                                "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                              }
                            },
                            "id": 779,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 778,
                              "name": "_requestID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "4574:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4565:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$502_storage",
                              "typeString": "struct RequestCity.Request storage ref"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 501,
                          "src": "4565:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 781,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "4595:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                              "typeString": "type(enum RequestCity.State)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "requested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4595:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$510",
                            "typeString": "enum RequestCity.State"
                          }
                        },
                        "src": "4565:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652072657175657374207374617465206973206e6f742772657175657374656427",
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4612:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        },
                        "value": "The request state is not'requested'"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd4be6c046828bb579f9195fb3c050e5839e8587515d1e05060b0176c4664ce",
                          "typeString": "literal_string \"The request state is not'requested'\""
                        }
                      ],
                      "id": 776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2083,
                        2084
                      ],
                      "referencedDeclaration": 2084,
                      "src": "4557:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4557:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:93:3"
                },
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 815,
                      "src": "4660:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 787,
                        "name": "Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 502,
                        "src": "4660:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "4686:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$502_storage_$",
                        "typeString": "mapping(uint256 => struct RequestCity.Request storage ref)"
                      }
                    },
                    "id": 791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "4695:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4686:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$502_storage",
                      "typeString": "struct RequestCity.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4660:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "4716:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                          "typeString": "struct RequestCity.Request storage pointer"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 501,
                      "src": "4716:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "4732:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$510_$",
                          "typeString": "type(enum RequestCity.State)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "solved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4732:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$510",
                        "typeString": "enum RequestCity.State"
                      }
                    },
                    "src": "4716:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 801,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "4764:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 491,
                        "src": "4764:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "tokenReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "4783:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 800,
                      "name": "mintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "4754:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "4754:41:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 807,
                        "name": "_requestID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "4822:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 808,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "4834:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                            "typeString": "struct RequestCity.Request storage pointer"
                          }
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 501,
                        "src": "4834:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$510",
                          "typeString": "enum RequestCity.State"
                        }
                      ],
                      "id": 806,
                      "name": "StateUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "4810:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$510_$returns$__$",
                        "typeString": "function (uint256,enum RequestCity.State)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4810:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "EmitStatement",
                  "src": "4805:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "4865:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$502_storage_ptr",
                        "typeString": "struct RequestCity.Request storage pointer"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 501,
                    "src": "4865:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "functionReturnParameters": 775,
                  "id": 814,
                  "nodeType": "Return",
                  "src": "4858:20:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the request state to solved. Only onlyOwners can do it\n @param _requestID id of the request\n @return new request state",
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "4521:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4521:9:3"
              }
            ],
            "name": "solveRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "name": "_requestID",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4497:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4497:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4496:17:3"
            },
            "returnParameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4540:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$510",
                    "typeString": "enum RequestCity.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 773,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 510,
                    "src": "4540:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$510",
                      "typeString": "enum RequestCity.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4539:7:3"
            },
            "scope": 909,
            "src": "4475:410:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 833,
              "nodeType": "Block",
              "src": "5134:80:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 825,
                      "name": "requestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "5144:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 826,
                        "name": "_newprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "5159:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:7:3",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "5159:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5144:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "5144:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 831,
                    "name": "requestPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 478,
                    "src": "5195:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 824,
                  "id": 832,
                  "nodeType": "Return",
                  "src": "5188:19:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the requestPrice\n @param _newprice new request price in wei\n @return Updated price of the request",
            "id": 834,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 820,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5109:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5109:9:3"
              }
            ],
            "name": "setRequestPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "_newprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "5086:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5086:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5085:16:3"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "5128:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5127:6:3"
            },
            "scope": 909,
            "src": "5060:154:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 849,
              "nodeType": "Block",
              "src": "5468:74:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 843,
                      "name": "tokenReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "5478:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 844,
                      "name": "_newTokenReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "5492:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5478:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 847,
                    "name": "tokenReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 483,
                    "src": "5524:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 842,
                  "id": 848,
                  "nodeType": "Return",
                  "src": "5517:18:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice change the tokenReward\n @param _newTokenReward new request price in wei\n @return Updated price of the request",
            "id": 850,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 839,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 838,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5443:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5443:9:3"
              }
            ],
            "name": "setTokenReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "name": "_newTokenReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "5414:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5413:22:3"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "5462:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5461:6:3"
            },
            "scope": 909,
            "src": "5389:153:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "5739:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 858,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2118,
                          "src": "5764:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RequestCity_$909",
                            "typeString": "contract RequestCity"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RequestCity_$909",
                            "typeString": "contract RequestCity"
                          }
                        ],
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5756:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5756:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5756:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 856,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "5749:28:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice obtain the balance of the contract address\n @return contracts balance",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 853,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 852,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5715:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5715:9:3"
              }
            ],
            "name": "contractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5698:2:3"
            },
            "returnParameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "5733:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5732:6:3"
            },
            "scope": 909,
            "src": "5674:110:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "5921:156:3",
              "statements": [
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "5931:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5931:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 872,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 870,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2080,
                      "src": "5955:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5955:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5931:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 877,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2118,
                              "src": "5998:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            ],
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5990:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5990:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5990:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "5975:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5975:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5975:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "5975:37:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "6041:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 885,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2118,
                              "src": "6056:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RequestCity_$909",
                                "typeString": "contract RequestCity"
                              }
                            ],
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6048:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6048:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6048:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 882,
                      "name": "WithdrawEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "6027:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6027:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 889,
                  "nodeType": "EmitStatement",
                  "src": "6022:48:3"
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n @notice owner can withdraw the contract balance",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 866,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 865,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "5911:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5911:9:3"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5899:2:3"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5921:0:3"
            },
            "scope": 909,
            "src": "5875:202:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "6200:102:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "6214:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6214:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6226:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6214:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 906,
                  "nodeType": "IfStatement",
                  "src": "6210:86:3",
                  "trueBody": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "6229:67:3",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 899,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2080,
                                "src": "6266:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6266:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 901,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2080,
                                "src": "6278:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6278:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 898,
                            "name": "AccidentalDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "6248:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6248:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 904,
                        "nodeType": "EmitStatement",
                        "src": "6243:45:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@author Jordi Guirao\n@dev Fallback function allows to deposit ether.",
            "id": 908,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6180:2:3"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6200:0:3"
            },
            "scope": 909,
            "src": "6172:130:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 910,
        "src": "394:5910:3"
      }
    ],
    "src": "0:6304:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xd74ca19e3ad79f107cd3fb64be535aace3422e872c572909645452a6a9158062": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "AccidentalDeposit",
          "type": "event",
          "signature": "0xd74ca19e3ad79f107cd3fb64be535aace3422e872c572909645452a6a9158062"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Burn",
          "type": "event",
          "signature": "0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5"
        },
        "0xd6c92eeb860bf9ce43d6b112fee6f9d8048c39ae1ea79b55ff464900861d1e54": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "applicant",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "ipfsHash",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "requestAddress",
              "type": "string"
            }
          ],
          "name": "NewRequest",
          "type": "event",
          "signature": "0xd6c92eeb860bf9ce43d6b112fee6f9d8048c39ae1ea79b55ff464900861d1e54"
        },
        "0x83816cf3e38e624df946c11b7c2432c2f9e3d504aef4bea7a67a4a95a7e97701": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "OwnerslistAddressAdded",
          "type": "event",
          "signature": "0x83816cf3e38e624df946c11b7c2432c2f9e3d504aef4bea7a67a4a95a7e97701"
        },
        "0x573f8b697fb02eea64e5bb95dc7d0d06498fbc3d35ec94b4239327afee007771": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "OwnerslistAddressRemoved",
          "type": "event",
          "signature": "0x573f8b697fb02eea64e5bb95dc7d0d06498fbc3d35ec94b4239327afee007771"
        },
        "0xaeb9cdb2262d9c6da78aab88f1554ca2a08120de39807de5747118702bfc9631": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "requestID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum RequestCity.State",
              "name": "state",
              "type": "uint8"
            }
          ],
          "name": "StateUpdate",
          "type": "event",
          "signature": "0xaeb9cdb2262d9c6da78aab88f1554ca2a08120de39807de5747118702bfc9631"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "WithdrawEvent",
          "type": "event",
          "signature": "0x5dba113b49cfa7c90315e8e604e6b506f7abcb909b01dcb19ec39005086e68fc"
        }
      },
      "links": {},
      "address": "0xef812eA9d11Dae8d1D7EBd3518EE6a4dc610fe49",
      "transactionHash": "0xdfd245b4aeb3c8a615ab66438b585ad8ebed7213d8896813a8159f328b242b06"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-01-14T15:10:46.832Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Jordi Guirao",
    "methods": {
      "addOwner(address)": {
        "author": "Jordi Guirao",
        "params": {
          "addr": "address"
        },
        "return": "true if the address was added to the ownerslist, false if the address was already in the ownerslist"
      },
      "allowanceAddressToken(address,address)": {
        "author": "Jordi Guirao",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "approveToken(address,uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        },
        "return": "bool"
      },
      "balanceAddressToken(address)": {
        "author": "Jordi Guirao",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burnToken(uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_value": "the amount of money to burn"
        },
        "return": "bool"
      },
      "contractBalance()": {
        "author": "Jordi Guirao",
        "return": "contracts balance"
      },
      "createRequest(string,string,string,string,uint8)": {
        "author": "Jordi Guirao",
        "params": {
          "_city": "Nambe of the city",
          "_description": "Description of the request",
          "_ipfsHash": "ipsfhash of the image",
          "_priority": "Priority that need the request to be solved",
          "_requestAddress": "Address where is the event found"
        }
      },
      "denyRequest(uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_requestID": "id of the request"
        },
        "return": "new request state"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "getNumberOfRequests()": {
        "author": "Jordi Guirao",
        "return": "number of requests"
      },
      "getRequest(uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_requestID": "ID of the request"
        },
        "return": "request details"
      },
      "getUserRequests()": {
        "author": "Jordi Guirao",
        "return": "an array with the id of the requests that msg.sender has done."
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintToken(address,uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "mintedAmount": "the amount of tokens it will receive",
          "target": "Address to receive the tokens"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "removeOwner(address)": {
        "author": "Jordi Guirao",
        "params": {
          "addr": "address"
        },
        "return": "true if the address was removed from the ownerslist, false if the address wasn't in the ownerslist in the first place"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setRequestPrice(uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_newprice": "new request price in wei"
        },
        "return": "Updated price of the request"
      },
      "setTokenReward(uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_newTokenReward": "new request price in wei"
        },
        "return": "Updated price of the request"
      },
      "solveRequest(uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_requestID": "id of the request"
        },
        "return": "new request state"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferFromToken(address,address,uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        },
        "return": "bool"
      },
      "transferToken(address,uint256)": {
        "author": "Jordi Guirao",
        "params": {
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        },
        "return": "bool"
      },
      "withdrawBalance()": {
        "author": "Jordi Guirao"
      }
    },
    "title": "A dapp for create request"
  },
  "userdoc": {
    "methods": {
      "addOwner(address)": {
        "notice": "add an address to the ownerslist"
      },
      "allowanceAddressToken(address,address)": {
        "notice": "Function to check the amount of tokens that an owner allowed to a spender."
      },
      "approveToken(address,uint256)": {
        "notice": "Set allowanceToken for other address: Allows `_spender` to spend no more than `_value` tokens in your behalf"
      },
      "balanceAddressToken(address)": {
        "notice": "Gets the balance of the specified address."
      },
      "burnToken(uint256)": {
        "notice": "Destroy tokens: Remove `_value` tokens from the system irreversibly"
      },
      "contractBalance()": {
        "notice": "obtain the balance of the contract address"
      },
      "createRequest(string,string,string,string,uint8)": {
        "notice": "create a new Request"
      },
      "denyRequest(uint256)": {
        "notice": "change the request state to solve denied. Only onlyOwners can do it"
      },
      "getNumberOfRequests()": {
        "notice": "get the number of requests made by msg.sender"
      },
      "getRequest(uint256)": {
        "notice": "get request information"
      },
      "getUserRequests()": {
        "notice": "get all the request that a user has made."
      },
      "mintToken(address,uint256)": {
        "notice": "Create `mintedAmount` tokens and send it to `target`"
      },
      "removeOwner(address)": {
        "notice": "remove an address from the ownerslist"
      },
      "setRequestPrice(uint256)": {
        "notice": "change the requestPrice"
      },
      "setTokenReward(uint256)": {
        "notice": "change the tokenReward"
      },
      "solveRequest(uint256)": {
        "notice": "change the request state to solved. Only onlyOwners can do it"
      },
      "transferFromToken(address,address,uint256)": {
        "notice": "Transfer tokens from other addressSend `_value` tokens to `_to` in behalf of `_from`"
      },
      "transferToken(address,uint256)": {
        "notice": "Transfer tokens: Send `_value` tokens to `_to` from your account"
      },
      "withdrawBalance()": {
        "notice": "owner can withdraw the contract balance"
      }
    },
    "notice": "Dapp to create requests to a city council, for example. If the requests are solved, the user will earn token"
  }
}